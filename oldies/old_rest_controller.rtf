{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red128\green128\blue128;}
{\*\expandedcolortbl;;\csgenericrgb\c50196\c50196\c50196;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 GamesRepository gamesRepository;\cf0 \
\cf2 	\cf0 \
\cf2 	@GetMapping("/games")\cf0 \
\cf2 	public  ResponseEntity<List<Games>> getAllGames() \{\cf0 \
\cf2 		try \{\cf0 \
\cf2 			List<Games> games = (List<Games>) gamesRepository.findAll();\cf0 \
\cf2 			if (games.isEmpty()) \{\cf0 \
\cf2 		        return new ResponseEntity<>(HttpStatus.NO_CONTENT);\cf0 \
\cf2 		      \}\cf0 \
\
\cf2 		      return new ResponseEntity<>(games, HttpStatus.OK);\cf0 \
\cf2 		\} catch (Exception e ) \{\cf0 \
\cf2 			return new ResponseEntity<>(null, HttpStatus.INTERNAL_SERVER_ERROR);\cf0 \
\cf2 		\}\cf0 \
\cf2 		\cf0 \
\cf2 	\}\cf0 \
\cf2 	\cf0 \
\cf2 	@GetMapping("/games/\{id\}")\cf0 \
\cf2 	public  ResponseEntity<Games> getGameById(@PathVariable("id") Long id) \{\cf0 \
\cf2 		try \{\cf0 \
\cf2 			Optional<Games> game = gamesRepository.findById(id);\cf0 \
\cf2 			if (!game.isPresent()) \{\cf0 \
\cf2 		        return new ResponseEntity<>(HttpStatus.NO_CONTENT);\cf0 \
\cf2 		      \}\cf0 \
\
\cf2 		      return new ResponseEntity<>(game.get(), HttpStatus.OK);\cf0 \
\cf2 		\} catch (Exception e ) \{\cf0 \
\cf2 			return new ResponseEntity<>(null, HttpStatus.INTERNAL_SERVER_ERROR);\cf0 \
\cf2 		\}	\cf0 \
\cf2 	\}\cf0 \
\cf2 	\cf0 \
\cf2 	@PostMapping("/games")\cf0 \
\cf2 	public ResponseEntity<Games> createGame(@RequestBody Games game) \{\cf0 \
\cf2 		try \{\cf0 \
\cf2 		gamesRepository.save(game);\cf0 \
\cf2 		return new ResponseEntity<>(game, HttpStatus.CREATED);\cf0 \
\cf2 		\} catch (Exception e) \{\cf0 \
\cf2 			return new ResponseEntity<>(null, HttpStatus.INTERNAL_SERVER_ERROR);\cf0 \
\cf2 		\}	\cf0 \
\cf2 	\}\cf0 \
\cf2 	\cf0 \
\cf2 	@PutMapping("/games/\{id\}")\cf0 \
\cf2 	public ResponseEntity<Games> updateGame(@PathVariable("id") Long id, @RequestBody Games game) \{\cf0 \
\cf2 		Optional<Games> gameOptional = gamesRepository.findById(id);\cf0 \
\cf2 		\cf0 \
\cf2 		if (gameOptional.isPresent()) \{\cf0 \
\cf2 			System.out.print("UPDATE" + gameOptional.get().toString());\cf0 \
\cf2 			game.setIdGame(id);\cf0 \
\cf2 			return new ResponseEntity<>(gamesRepository.save(game), HttpStatus.CREATED);\cf0 \
\cf2 			\} else \{\cf0 \
\cf2 				return new ResponseEntity<>(null, HttpStatus.INTERNAL_SERVER_ERROR);\cf0 \
\cf2 			\}	\cf0 \
\cf2 	\}\cf0 \
\cf2 	\cf0 \
\cf2 	@DeleteMapping("/games/\{id\}")\cf0 \
\cf2 	public ResponseEntity<HttpStatus> deleteGame(@PathVariable("id") Long id) \{\cf0 \
\cf2 		try \{\cf0 \
\cf2 		      gamesRepository.deleteById(id);\cf0 \
\cf2 		      return new ResponseEntity<>(HttpStatus.NO_CONTENT);\cf0 \
\cf2 		    \} catch (Exception e) \{\cf0 \
\cf2 		      return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);\cf0 \
\cf2 		    \}\cf0 \
\cf2 	\}\cf0 \
\cf2 	\cf0 \
\cf2 	@DeleteMapping("/games/")\cf0 \
\cf2 	public ResponseEntity<HttpStatus> deleteAllGames() \{\cf0 \
\cf2 		try \{\cf0 \
\cf2 		      gamesRepository.deleteAll();\cf0 \
\cf2 		      return new ResponseEntity<>(HttpStatus.NO_CONTENT);\cf0 \
\cf2 		    \} catch (Exception e) \{\cf0 \
\cf2 		      return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);\cf0 \
\cf2 		    \}\cf0 \
\cf2 	\}}